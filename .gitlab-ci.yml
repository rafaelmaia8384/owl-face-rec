stages:
  - build

variables:
  # O REGISTRY já contém o nome da imagem base.
  # Ex: registry.gitlab.com/meu-grupo/meu-projeto
  REGISTRY: "${CI_REGISTRY_IMAGE}"
  # Usamos o nome da branch como tag da imagem
  IMAGE_TAG: "${CI_COMMIT_REF_SLUG}"
  IMAGE_TAG_LATEST: "latest"

build_manual_main:
  stage: build
  image: docker:24.0.5
  services:
    - name: docker:24.0.5-dind
      alias: docker
  before_script:
    # Login no registro de contêiner do GitLab
    - echo "Logging into GitLab Container Registry..."
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    # 1. Constrói a imagem uma única vez
    - echo "Building Docker image $REGISTRY:$IMAGE_TAG"
    - docker build --pull -t "$REGISTRY:$IMAGE_TAG" .

    # 2. Adiciona a tag 'latest', já que estamos na branch main
    - echo "Tagging image as 'latest'..."
    - docker tag "$REGISTRY:$IMAGE_TAG" "$REGISTRY:$IMAGE_TAG_LATEST"

    # 3. Publica ambas as tags
    - echo "Pushing image $REGISTRY:$IMAGE_TAG"
    - docker push "$REGISTRY:$IMAGE_TAG"
    - echo "Pushing latest image $REGISTRY:$IMAGE_TAG_LATEST"
    - docker push "$REGISTRY:$IMAGE_TAG_LATEST"

    - echo "Images pushed successfully!"
  rules:
    # A MÁGICA ACONTECE AQUI:
    # 1. 'if': Só permite que esta regra seja válida para a branch 'main'.
    # 2. 'when: manual': Transforma o job em uma ação manual (precisa de clique).
    - if: '$CI_COMMIT_REF_NAME == "main"'
      when: manual
